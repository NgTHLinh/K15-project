<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wP2thr63U0z2AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wP2thr63U0z2AAAAABJRU5ErkJggg==
</value>
  </data>
</root>